{"ast":null,"code":"var _jsxFileName = \"/home/todisoa/Documents/49tsg/src/Spec.tsx\";\nimport React from \"react\";\nexport function Spec() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"Pour ce test, vous allez cr\\xE9er une application\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"TODOLIST\"), \", avec les sp\\xE9cifications suivantes :\", /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, \"Guidelines\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, \"Utilisez l'interface \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 42\n    }\n  }, \"ITodo\"), \" dans le fichier\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"ITodo.ts\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, \"Les composants sont de type\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \"functional component\"), \" de pr\\xE9f\\xE9rence.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"Utilisez les composants \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 45\n    }\n  }, \"@material-ui\"), \" d\\xE8s que l'occasion se pr\\xE9sente.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"BONUS : utilisez \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 38\n    }\n  }, \"typescript\"), \" si vous pouvez.\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Fonctionnalit\\xE9s\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Cr\\xE9ez un composant \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 40\n    }\n  }, \"TodoEditor\"), \" qui comprend :\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Un champ de saisie pour le titre de la t\\xE2che\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"Un champ texte pour sa d\\xE9scription\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"Un bouton \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 39\n    }\n  }, \"Enregistrer\"), \" pour ajouter la t\\xE2che parmi la liste\"))), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Cr\\xE9ez un composant \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 40\n    }\n  }, \"TodoList\"), \" qui comprend :\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"La liste des todos\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Au clic d'un \\xE9l\\xE9ment de la liste, le composant\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"TodoEditor\"), \" r\\xE9appara\\xEEt pour pouvoir \\xE9diter la t\\xE2che\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"A c\\xF4t\\xE9 de chaque \\xE9l\\xE9ment de la liste, un checkbox pour marquer la t\\xE2che comme termin\\xE9e\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Les t\\xE2ches termin\\xE9es sont affich\\xE9s parmi la liste mais \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 34\n    }\n  }, \"gris\\xE9s\"), \" et\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, \"ray\\xE9s\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"A c\\xF4t\\xE9 de chaque ligne ray\\xE9e, il y aura, en plus, un bouton \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 36\n    }\n  }, \"Supprimer\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"En haut de la liste, il y aura un bouton\", \" \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, \"toggle\"), \" qui permet d'afficher/cacher les \\xE9l\\xE9ments termin\\xE9s.\")))));\n}","map":{"version":3,"sources":["/home/todisoa/Documents/49tsg/src/Spec.tsx"],"names":["React","Spec"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,IAAT,GAAgB;AACnB,sBACI,+FACmD,GADnD,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,2DAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADzB,sBAC4D,GAD5D,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACgC,GADhC,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,0BALJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD5B,2CATJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADrB,qBAbJ,CAJJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BArBJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADvB,kCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADd,6CAHJ,CAFJ,CADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADvB,kCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DACmD,GADnD,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,yDAFJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAPJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFT,SAEoC,GAFpC,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAXJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAEW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFX,CAhBJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAC6C,GAD7C,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,kEApBJ,CAFJ,CAZJ,CAtBJ,CADJ;AAmEH","sourcesContent":["import React from \"react\";\n\nexport function Spec() {\n    return (\n        <>\n            Pour ce test, vous allez créer une application{\" \"}\n            <strong>TODOLIST</strong>, avec les spécifications suivantes :\n            <h2>Guidelines</h2>\n            <ul>\n                <li>\n                    Utilisez l'interface <code>ITodo</code> dans le fichier{\" \"}\n                    <code>ITodo.ts</code>\n                </li>\n                <li>\n                    Les composants sont de type{\" \"}\n                    <strong>functional component</strong> de préférence.\n                </li>\n                <li>\n                    Utilisez les composants <strong>@material-ui</strong> dès\n                    que l'occasion se présente.\n                </li>\n                <li>\n                    BONUS : utilisez <strong>typescript</strong> si vous pouvez.\n                </li>\n            </ul>\n            <h2>Fonctionnalités</h2>\n            <ul>\n                <li>\n                    Créez un composant <code>TodoEditor</code> qui comprend :\n                    <ul>\n                        <li>Un champ de saisie pour le titre de la tâche</li>\n                        <li>Un champ texte pour sa déscription</li>\n                        <li>\n                            Un bouton <strong>Enregistrer</strong> pour ajouter\n                            la tâche parmi la liste\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    Créez un composant <code>TodoList</code> qui comprend :\n                    <ul>\n                        <li>La liste des todos</li>\n                        <li>\n                            Au clic d'un élément de la liste, le composant{\" \"}\n                            <code>TodoEditor</code> réapparaît pour pouvoir\n                            éditer la tâche\n                        </li>\n                        <li>\n                            A côté de chaque élément de la liste, un checkbox\n                            pour marquer la tâche comme terminée\n                        </li>\n                        <li>\n                            Les tâches terminées sont affichés parmi la liste\n                            mais <strong>grisés</strong> et{\" \"}\n                            <strong>rayés</strong>\n                        </li>\n                        <li>\n                            A côté de chaque ligne rayée, il y aura, en plus, un\n                            bouton <strong>Supprimer</strong>\n                        </li>\n                        <li>\n                            En haut de la liste, il y aura un bouton{\" \"}\n                            <em>toggle</em> qui permet d'afficher/cacher les\n                            éléments terminés.\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}