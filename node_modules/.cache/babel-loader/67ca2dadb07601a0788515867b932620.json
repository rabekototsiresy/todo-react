{"ast":null,"code":"import _objectSpread from \"/home/todisoa/Documents/49tsg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/todisoa/Documents/49tsg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/todisoa/Documents/49tsg/src/components/TodoEditor/index.js\";\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo as _addTodo } from '../../redux';\nimport ITodo from '../../ITodo';\nimport { TextField, Button } from '@material-ui/core';\n\nvar TodoEditor = function TodoEditor(props) {\n  var data = {\n    title: ITodo.title,\n    description: ITodo.description\n  };\n  var listTask = props.listTask,\n      addTodo = props.addTodo;\n\n  var _useState = useState(data),\n      _useState2 = _slicedToArray(_useState, 2),\n      todo = _useState2[0],\n      setTodo = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    setTodo(_objectSpread(_objectSpread({}, todo), {}, {\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var title = todo.title,\n        description = todo.description;\n    e.preventDefault();\n\n    if (title && description) {\n      addTodo(todo);\n    } else {\n      alert(\"champ vide\");\n    }\n\n    setTodo(data);\n  };\n\n  var title = todo.title,\n      description = todo.description;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Title\",\n    variant: \"outlined\",\n    value: \"Title\",\n    id: \"title\",\n    type: \"text\",\n    value: title || '',\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Description\",\n    variant: \"outlined\",\n    id: \"description\",\n    type: \"text\",\n    value: description || '',\n    placeholder: \"Qu'est ce que vous voulez faire ? \",\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    style: {\n      \"marginTop\": \"5px\"\n    },\n    type: \"submit\",\n    id: \"bAdd\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Enregistrer\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"bAdd\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"ENregistrer\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"end\",\n    onClick: props.handleModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Listes des taches t\\xE9rmin\\xE9s \"));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    listTask: state.listTask\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addTodo: function addTodo(todo) {\n      return dispatch(_addTodo(todo));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoEditor);","map":{"version":3,"sources":["/home/todisoa/Documents/49tsg/src/components/TodoEditor/index.js"],"names":["React","useState","connect","addTodo","ITodo","TextField","Button","TodoEditor","props","data","title","description","listTask","todo","setTodo","handleChange","e","target","id","value","handleSubmit","preventDefault","alert","handleModal","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../../redux'\r\nimport ITodo from '../../ITodo';\r\nimport {TextField,Button} from '@material-ui/core'\r\n\r\nconst TodoEditor = (props) => {\r\n  const data = {\r\n    title: ITodo.title,\r\n    description: ITodo.description\r\n  }\r\n  const {listTask,addTodo} = props;\r\n  const [todo, setTodo] = useState(data)\r\n  const handleChange = e=>{\r\n    setTodo({...todo,[e.target.id]: e.target.value})\r\n  }\r\n\r\n  const handleSubmit = (e)=>{\r\n\r\n    const { title,description } = todo\r\n    e.preventDefault();\r\n    if(title && description){\r\n      addTodo(todo);\r\n    }else{\r\n      alert(\"champ vide\")\r\n    }\r\n    \r\n     setTodo(data);\r\n  }\r\n  const { title,description } = todo\r\n  return (\r\n    <div>\r\n\r\n\r\n        <span>\r\n        <TextField \r\n          label=\"Title\" \r\n          variant=\"outlined\" \r\n          value=\"Title\"\r\n          id=\"title\"\r\n          type=\"text\" \r\n          value={title || ''} \r\n          onChange={handleChange}\r\n          />\r\n        </span>\r\n\r\n        <span>\r\n        <TextField \r\n          label=\"Description\" \r\n          variant=\"outlined\" \r\n          id=\"description\"\r\n          type=\"text\" \r\n          value={description || ''} \r\n          placeholder=\"Qu'est ce que vous voulez faire ? \" \r\n          onChange={handleChange}\r\n          />\r\n        </span>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\" size=\"medium\"\r\n          style={{ \"marginTop\": \"5px\" }}\r\n          type=\"submit\"\r\n          \r\n          id=\"bAdd\"\r\n        \r\n          onClick={handleSubmit}\r\n          >\r\n            Enregistrer\r\n          </Button>\r\n     \r\n      \r\n\r\n\r\n\r\n      \r\n\r\n      \r\n      <button id=\"bAdd\" onClick={handleSubmit}>ENregistrer</button>\r\n      <button  className=\"end\" onClick={props.handleModal}>Listes des taches términés </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n  return{\r\n    listTask: state.listTask\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch=>{\r\n  return{\r\n    addTodo: (todo)=>dispatch(addTodo(todo))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TodoEditor)\r\n"]},"metadata":{},"sourceType":"module"}