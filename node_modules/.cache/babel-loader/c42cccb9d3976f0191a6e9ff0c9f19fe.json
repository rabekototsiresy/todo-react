{"ast":null,"code":"import _objectSpread from \"/home/todisoa/Documents/49tsg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/todisoa/Documents/49tsg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/todisoa/Documents/49tsg/src/components/TodoList/index.js\";\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTodo, updateTodo } from '../../redux';\nimport ITodo from '../../ITodo';\n\nvar TodoList = function TodoList() {\n  var listTask = useSelector(function (state) {\n    return state.listTask;\n  });\n  var dispatch = useDispatch();\n  var data = {\n    title: ITodo.title,\n    task: ITodo.description,\n    isCompleted: null\n  };\n\n  var _useState = useState(data),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskUpdate = _useState2[0],\n      setTaskUpdate = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      checkCompleted = _useState4[0],\n      setCheckCompleted = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      update = _useState6[0],\n      setUpdate = _useState6[1];\n\n  var showInputUpdate = function showInputUpdate(id, task, title, isCompleted) {\n    setUpdate(id);\n    data.title = title;\n    data.task = task;\n    data.isCompleted = isCompleted;\n    setTaskUpdate(data);\n  };\n\n  var hanldeUpdate = function hanldeUpdate(id) {\n    console.log(checkCompleted); //dispatch(updateTodo(taskUpdate,checkCompleted,id))\n    //setUpdate('')\n    //setTaskUpdate('')\n  };\n\n  var handleChange = function handleChange(e) {\n    setTaskUpdate(_objectSpread(_objectSpread({}, taskUpdate), {}, {\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  var check = function check(e) {\n    setCheckCompleted(e.target.checked);\n  };\n\n  var title = taskUpdate.title,\n      task = taskUpdate.task,\n      isCompleted = taskUpdate.isCompleted;\n  var displayTask = listTask.map(function (todo) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: todo.id,\n      className: \"isCompleted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: check,\n      checked: isCompleted,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    })), update == todo.id ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"title\",\n      type: \"text\",\n      value: title,\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"task\",\n      type: \"text\",\n      value: task,\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, todo.title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, todo.task)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, update == todo.id ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        hanldeUpdate(todo.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }\n    }, \"Save\") : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return showInputUpdate(todo.id, todo.task, todo.title, todo.isCompleted);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"Update\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return dispatch(deleteTodo(todo.id));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Delete\")));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"List Task\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mainTable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Todo\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, displayTask))));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/home/todisoa/Documents/49tsg/src/components/TodoList/index.js"],"names":["React","useState","useSelector","useDispatch","deleteTodo","updateTodo","ITodo","TodoList","listTask","state","dispatch","data","title","task","description","isCompleted","taskUpdate","setTaskUpdate","checkCompleted","setCheckCompleted","update","setUpdate","showInputUpdate","id","hanldeUpdate","console","log","handleChange","e","target","value","check","checked","displayTask","map","todo"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { deleteTodo,updateTodo } from '../../redux';\r\nimport ITodo from '../../ITodo';\r\n\r\nconst TodoList = () => {\r\n  \r\n  const listTask = useSelector( state=>state.listTask)\r\n  const dispatch = useDispatch()\r\n  const data = {\r\n    title: ITodo.title,\r\n    task: ITodo.description,\r\n    isCompleted: null\r\n  }\r\n  const [taskUpdate, setTaskUpdate] = useState(data)\r\n  const [checkCompleted, setCheckCompleted] = useState(null)\r\n\r\n\r\n  const [update, setUpdate] = useState('')\r\n  const showInputUpdate  = (id,task,title,isCompleted)=>{\r\n    setUpdate(id)\r\n    data.title = title\r\n    data.task =task\r\n    data.isCompleted = isCompleted\r\n    \r\n    setTaskUpdate(data)\r\n    \r\n  }\r\n \r\n  const hanldeUpdate = (id)=>{\r\n    \r\n    console.log(checkCompleted)\r\n    //dispatch(updateTodo(taskUpdate,checkCompleted,id))\r\n    \r\n    //setUpdate('')\r\n    //setTaskUpdate('')\r\n  }\r\n\r\nconst handleChange = (e)=>{\r\n\r\n  setTaskUpdate({...taskUpdate,[e.target.id]:e.target.value })\r\n}\r\n \r\n\r\nconst check = (e)=>{\r\n  setCheckCompleted(e.target.checked)\r\n\r\n\r\n}\r\nconst { title,task,isCompleted } = taskUpdate;\r\n\r\n  \r\n  const displayTask = listTask.map(todo=>(\r\n    <tr key={todo.id} className=\"isCompleted\">\r\n      <td>\r\n        <input type=\"checkbox\"  onChange={check} checked={isCompleted} />\r\n      </td>\r\n\r\n      {\r\n        update == todo.id\r\n        ?\r\n        (\r\n\r\n          <>\r\n\r\n          <td>\r\n            <input \r\n            id=\"title\"\r\n            type='text' \r\n            value={title}  \r\n            onChange={handleChange}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input \r\n            id=\"task\"\r\n            type='text' \r\n            value={task}  \r\n            onChange={handleChange}\r\n            />\r\n          </td>\r\n          </>\r\n        )\r\n        :\r\n        (\r\n          <>\r\n            <td>{todo.title}</td>\r\n          <td>{todo.task}</td>\r\n          </>\r\n        )\r\n      }\r\n      <td>\r\n      {\r\n        update == todo.id\r\n        ? \r\n        (<button onClick={()=>{hanldeUpdate(todo.id)}}>\r\n          Save\r\n        </button>)\r\n        :\r\n        (\r\n        <button onClick={()=>showInputUpdate(todo.id,todo.task,todo.title,todo.isCompleted)}>\r\n          Update\r\n        </button>\r\n        )\r\n      }\r\n      </td>\r\n      <td>\r\n        <button onClick={()=>dispatch(deleteTodo(todo.id))}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ))\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <h3>\r\n        <u>List Task</u>\r\n      </h3>\r\n      <div id='mainTable'>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Title</th>\r\n              <th>Todo</th>\r\n              <th>Update</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {displayTask}\r\n          </tbody>\r\n        </table>\r\n        \r\n      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}