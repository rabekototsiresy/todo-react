{"ast":null,"code":"import _toConsumableArray from \"/home/todisoa/Documents/49tsg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/todisoa/Documents/49tsg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ADD_TODO, DELETE_TODO, UPDATE_TODO } from './taskTypes';\nvar initialState = {\n  listTask: []\n};\nvar lastId = 0;\nexport var taskReducer = function taskReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listTask: [].concat(_toConsumableArray(state.listTask), [{\n          title: action.payload.title,\n          task: action.payload.task,\n          id: ++lastId,\n          isCompleted: null\n        }])\n      });\n\n    case DELETE_TODO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listTask: state.listTask.filter(function (task) {\n          return task.id !== action.payload;\n        })\n      });\n\n    case UPDATE_TODO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listTask: state.listTask.map(function (task) {\n          return task.id == action.payload.id ? {\n            task: action.payload.task,\n            title: action.payload.title,\n            id: task.id,\n            isCompleted: action.payload.checkTask\n          } : task;\n        })\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/todisoa/Documents/49tsg/src/redux/task/taskReducer.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","initialState","listTask","lastId","taskReducer","state","action","type","title","payload","task","id","isCompleted","filter","map","checkTask"],"mappings":";;AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,WAHF,QAIQ,aAJR;AAMA,IAAMC,YAAY,GAAI;AACpBC,EAAAA,QAAQ,EAAC;AADW,CAAtB;AAIA,IAAIC,MAAM,GAAG,CAAb;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA8B;AAAA,MAA7BC,KAA6B,uEAAvBJ,YAAuB;AAAA,MAATK,MAAS;;AACvD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKT,QAAL;AACE,6CACKO,KADL;AAEEH,QAAAA,QAAQ,+BAAMG,KAAK,CAACH,QAAZ,IAAqB;AAC3BM,UAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD,KADK;AAE3BE,UAAAA,IAAI,EAAEJ,MAAM,CAACG,OAAP,CAAeC,IAFM;AAG3BC,UAAAA,EAAE,EAAE,EAAER,MAHqB;AAI3BS,UAAAA,WAAW,EAAE;AAJc,SAArB;AAFV;;AASF,SAAKb,WAAL;AACE,6CACKM,KADL;AAEEH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeW,MAAf,CAAuB,UAAAH,IAAI;AAAA,iBAAEA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACG,OAArB;AAAA,SAA3B;AAFZ;;AAIF,SAAKT,WAAL;AACE,6CACKK,KADL;AAEEH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeY,GAAf,CAAoB,UAAAJ,IAAI;AAAA,iBAAEA,IAAI,CAACC,EAAL,IAAWL,MAAM,CAACG,OAAP,CAAeE,EAA1B,GACpC;AACED,YAAAA,IAAI,EAAEJ,MAAM,CAACG,OAAP,CAAeC,IADvB;AAEEF,YAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD,KAFxB;AAGEG,YAAAA,EAAE,EAAED,IAAI,CAACC,EAHX;AAIEC,YAAAA,WAAW,EAAEN,MAAM,CAACG,OAAP,CAAeM;AAJ9B,WADoC,GAOhCL,IAP8B;AAAA,SAAxB;AAFZ;;AAWF;AACE,aAAOL,KAAP;AA7BJ;AA+BD,CAhCM","sourcesContent":["import { \r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO\r\n } from './taskTypes';\r\n\r\nconst initialState =  {\r\n  listTask:[]\r\n}\r\n\r\nlet lastId = 0\r\nexport const taskReducer = (state=initialState, action)=>{\r\n  switch(action.type){\r\n    case ADD_TODO: \r\n      return{\r\n        ...state,\r\n        listTask: [...state.listTask,{\r\n          title: action.payload.title,\r\n          task: action.payload.task,\r\n          id: ++lastId,\r\n          isCompleted: null\r\n        }]\r\n      }\r\n    case DELETE_TODO: \r\n      return {\r\n        ...state,\r\n        listTask: state.listTask.filter( task=>task.id !== action.payload)\r\n      }\r\n    case UPDATE_TODO: \r\n      return{\r\n        ...state,\r\n        listTask: state.listTask.map( task=>task.id == action.payload.id ?\r\n        {\r\n          task: action.payload.task,\r\n          title: action.payload.title,\r\n          id: task.id,\r\n          isCompleted: action.payload.checkTask\r\n          \r\n        } : task)\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}