{"ast":null,"code":"import _toConsumableArray from \"/home/todisoa/Documents/49tsg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/todisoa/Documents/49tsg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ADD_TODO, DELETE_TODO, UPDATE_TODO, UPDATA_CHECK, ADD_TODO_FINISHED } from './taskTypes';\nvar initialState = {\n  listTask: [],\n  listTodoFinished: []\n};\nvar lastId = 0;\nexport var taskReducer = function taskReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listTask: [].concat(_toConsumableArray(state.listTask), [{\n          title: action.payload.title,\n          task: action.payload.task,\n          id: ++lastId,\n          isCompleted: null\n        }])\n      });\n\n    case DELETE_TODO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listTask: state.listTask.filter(function (task) {\n          return task.id !== action.payload;\n        })\n      });\n\n    case UPDATE_TODO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listTask: state.listTask.map(function (task) {\n          return task.id == action.payload.id ? {\n            task: action.payload.task,\n            title: action.payload.title,\n            id: task.id,\n            isCompleted: action.payload.checkTask\n          } : task;\n        })\n      });\n\n    case UPDATA_CHECK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listTask: state.listTask.map(function (task) {\n          return task.id == action.payload.id ? {\n            task: task.task,\n            title: task.title,\n            id: task.id,\n            isCompleted: action.payload.taskCheck\n          } : task;\n        })\n      });\n\n    case ADD_TODO_FINISHED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listTodoFinished: [].concat(_toConsumableArray(listTodoFinished), [{\n          id: action.payload.id,\n          title: action.payload.title,\n          task: action.payload.task\n        }])\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/todisoa/Documents/49tsg/src/redux/task/taskReducer.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","UPDATA_CHECK","ADD_TODO_FINISHED","initialState","listTask","listTodoFinished","lastId","taskReducer","state","action","type","title","payload","task","id","isCompleted","filter","map","checkTask","taskCheck"],"mappings":";;AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,iBALF,QAMQ,aANR;AAQA,IAAMC,YAAY,GAAI;AACpBC,EAAAA,QAAQ,EAAC,EADW;AAEpBC,EAAAA,gBAAgB,EAAE;AAFE,CAAtB;AAKA,IAAIC,MAAM,GAAG,CAAb;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA8B;AAAA,MAA7BC,KAA6B,uEAAvBL,YAAuB;AAAA,MAATM,MAAS;;AACvD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKZ,QAAL;AACE,6CACKU,KADL;AAEEJ,QAAAA,QAAQ,+BAAMI,KAAK,CAACJ,QAAZ,IAAqB;AAC3BO,UAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD,KADK;AAE3BE,UAAAA,IAAI,EAAEJ,MAAM,CAACG,OAAP,CAAeC,IAFM;AAG3BC,UAAAA,EAAE,EAAE,EAAER,MAHqB;AAI3BS,UAAAA,WAAW,EAAE;AAJc,SAArB;AAFV;;AASF,SAAKhB,WAAL;AACE,6CACKS,KADL;AAEEJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeY,MAAf,CAAuB,UAAAH,IAAI;AAAA,iBAAEA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACG,OAArB;AAAA,SAA3B;AAFZ;;AAIF,SAAKZ,WAAL;AACE,6CACKQ,KADL;AAEEJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAea,GAAf,CAAoB,UAAAJ,IAAI;AAAA,iBAAEA,IAAI,CAACC,EAAL,IAAWL,MAAM,CAACG,OAAP,CAAeE,EAA1B,GACpC;AACED,YAAAA,IAAI,EAAEJ,MAAM,CAACG,OAAP,CAAeC,IADvB;AAEEF,YAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD,KAFxB;AAGEG,YAAAA,EAAE,EAAED,IAAI,CAACC,EAHX;AAIEC,YAAAA,WAAW,EAAEN,MAAM,CAACG,OAAP,CAAeM;AAJ9B,WADoC,GAOhCL,IAP8B;AAAA,SAAxB;AAFZ;;AAWF,SAAKZ,YAAL;AACE,6CACKO,KADL;AAEEJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAea,GAAf,CAAoB,UAAAJ,IAAI;AAAA,iBAAEA,IAAI,CAACC,EAAL,IAAWL,MAAM,CAACG,OAAP,CAAeE,EAA1B,GAClC;AACED,YAAAA,IAAI,EAAEA,IAAI,CAACA,IADb;AAEEF,YAAAA,KAAK,EAAEE,IAAI,CAACF,KAFd;AAGEG,YAAAA,EAAE,EAAED,IAAI,CAACC,EAHX;AAIEC,YAAAA,WAAW,EAAEN,MAAM,CAACG,OAAP,CAAeO;AAJ9B,WADkC,GAO9BN,IAP4B;AAAA,SAAxB;AAFZ;;AAYA,SAAKX,iBAAL;AACE,6CACKM,KADL;AAEEH,QAAAA,gBAAgB,+BAAMA,gBAAN,IAAuB;AACrCS,UAAAA,EAAE,EAAEL,MAAM,CAACG,OAAP,CAAeE,EADkB;AAErCH,UAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD,KAFe;AAGrCE,UAAAA,IAAI,EAAEJ,MAAM,CAACG,OAAP,CAAeC;AAHgB,SAAvB;AAFlB;;AAQJ;AACE,aAAOL,KAAP;AAnDJ;AAqDD,CAtDM","sourcesContent":["import { \r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  UPDATA_CHECK,\r\n  ADD_TODO_FINISHED\r\n } from './taskTypes';\r\n\r\nconst initialState =  {\r\n  listTask:[],\r\n  listTodoFinished: []\r\n}\r\n\r\nlet lastId = 0\r\nexport const taskReducer = (state=initialState, action)=>{\r\n  switch(action.type){\r\n    case ADD_TODO: \r\n      return{\r\n        ...state,\r\n        listTask: [...state.listTask,{\r\n          title: action.payload.title,\r\n          task: action.payload.task,\r\n          id: ++lastId,\r\n          isCompleted: null\r\n        }]\r\n      }\r\n    case DELETE_TODO: \r\n      return {\r\n        ...state,\r\n        listTask: state.listTask.filter( task=>task.id !== action.payload)\r\n      }\r\n    case UPDATE_TODO: \r\n      return{\r\n        ...state,\r\n        listTask: state.listTask.map( task=>task.id == action.payload.id ?\r\n        {\r\n          task: action.payload.task,\r\n          title: action.payload.title,\r\n          id: task.id,\r\n          isCompleted: action.payload.checkTask\r\n          \r\n        } : task)\r\n      }\r\n    case UPDATA_CHECK:\r\n      return{\r\n        ...state,\r\n        listTask: state.listTask.map( task=>task.id == action.payload.id ?\r\n          {\r\n            task: task.task,\r\n            title: task.title,\r\n            id: task.id,\r\n            isCompleted: action.payload.taskCheck\r\n            \r\n          } : task)\r\n\r\n      }\r\n      case ADD_TODO_FINISHED: \r\n        return{\r\n          ...state,\r\n          listTodoFinished: [...listTodoFinished,{\r\n            id: action.payload.id,\r\n            title: action.payload.title,\r\n            task: action.payload.task\r\n          }]\r\n        }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}