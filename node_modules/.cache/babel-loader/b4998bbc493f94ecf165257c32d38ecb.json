{"ast":null,"code":"import _slicedToArray from \"/home/todisoa/Documents/49tsg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/todisoa/Documents/49tsg/src/components/TodoList/index.js\";\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTodo, updateTodo } from '../../redux';\n\nvar TodoList = function TodoList() {\n  var listTask = useSelector(function (state) {\n    return state.listTask;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskUpdate = _useState2[0],\n      setTaskUpdate = _useState2[1];\n\n  console.log(listTask);\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      update = _useState4[0],\n      setUpdate = _useState4[1];\n\n  var showInputUpdate = function showInputUpdate(id, taskToUpdate) {\n    setUpdate(id);\n    setTaskUpdate(taskToUpdate);\n  };\n\n  var hanldeUpdate = function hanldeUpdate(id) {\n    dispatch(updateTodo(taskUpdate, id));\n    setUpdate('');\n    setTaskUpdate('');\n  };\n\n  var displayTask = listTask.map(function (task) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: task.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, task.id), update == task.id ? /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: taskUpdate,\n      onChange: function onChange(e) {\n        return setTaskUpdate(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, task.task), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, update == task.id ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        hanldeUpdate(task.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }\n    }, \"Save\") : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return showInputUpdate(task.id, task.task);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Update\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return dispatch(deleteTodo(task.id));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Delete\")));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"List Task\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"mainTable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Todo\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, displayTask))));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/home/todisoa/Documents/49tsg/src/components/TodoList/index.js"],"names":["React","useState","useSelector","useDispatch","deleteTodo","updateTodo","TodoList","listTask","state","dispatch","taskUpdate","setTaskUpdate","console","log","update","setUpdate","showInputUpdate","id","taskToUpdate","hanldeUpdate","displayTask","map","task","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { deleteTodo,updateTodo } from '../../redux';\r\n\r\nconst TodoList = () => {\r\n  const listTask = useSelector( state=>state.listTask)\r\n  const dispatch = useDispatch()\r\n  const [taskUpdate, setTaskUpdate] = useState('')\r\n\r\nconsole.log(listTask)\r\n\r\n  const [update, setUpdate] = useState('')\r\n  const showInputUpdate  = (id,taskToUpdate)=>{\r\n    setUpdate(id)\r\n    setTaskUpdate(taskToUpdate)\r\n  }\r\n \r\n  const hanldeUpdate = (id)=>{\r\n    dispatch(updateTodo(taskUpdate,id))\r\n    setUpdate('')\r\n    setTaskUpdate('')\r\n  }\r\n \r\n  \r\n  const displayTask = listTask.map(task=>(\r\n    <tr key={task.id}>\r\n      <td>{task.id}</td>\r\n      {\r\n        update == task.id\r\n        ?\r\n        (\r\n          <td>\r\n            <input \r\n            type='text' \r\n            value={taskUpdate}  \r\n            onChange={(e)=>setTaskUpdate(e.target.value)}\r\n            />\r\n          </td>\r\n        )\r\n        :\r\n        (\r\n          <td>{task.task}</td>\r\n        )\r\n      }\r\n      <td>\r\n      {\r\n        update == task.id\r\n        ? \r\n        (<button onClick={()=>{hanldeUpdate(task.id)}}>\r\n          Save\r\n        </button>)\r\n        :\r\n        (\r\n        <button onClick={()=>showInputUpdate(task.id,task.task)}>\r\n          Update\r\n        </button>\r\n        )\r\n      }\r\n      </td>\r\n      <td>\r\n        <button onClick={()=>dispatch(deleteTodo(task.id))}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ))\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <h3>\r\n        <u>List Task</u>\r\n      </h3>\r\n      <div id='mainTable'>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Todo</th>\r\n              <th>Update</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {displayTask}\r\n          </tbody>\r\n        </table>\r\n        \r\n      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}